name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate Docker to GCR
      run: |
        gcloud auth configure-docker

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Build Docker Image
      run: |
        docker build --no-cache -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/sliit-ctse:latest .
        docker build --no-cache -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/cart-service:latest  ./cart-management
        docker build --no-cache -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/order-service:latest ./order-management
        docker build --no-cache -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-service:latest ./user-management
        docker build --no-cache -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/item-service:latest ./item-management

    - name: Push Docker Image to GCR
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/sliit-ctse:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/order-service:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/cart-service:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-service:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/item-service:latest

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ctse-assignment --zone asia-south1-c --project=${{ secrets.GCP_PROJECT_ID }}

    - name: Install GKE Auth Plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin

    - name: Deploy to GKE
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl apply -f ./order-management/deployment-2.yaml
        kubectl apply -f ./cart-management/deployment-1.yaml
        kubectl apply -f ./user-management/deployment-3.yaml
        kubectl apply -f ./item-management/deployment.yaml
        kubectl apply -f ./item-management/service.yaml
